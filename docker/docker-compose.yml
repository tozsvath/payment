version: "3.8"
services:
#  notification-service:
#    build:
#      context: ../
#      dockerfile: ./notification/Dockerfile
#    ports:
#      - "8080:8080"
#    environment:
#      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9093
#      SPRING_APPLICATION_NAME: notification-service
#    depends_on:
#      - db
#      - zookeeper
#      - kafka
#      - transaction-service


#  transaction-service:
#    build:
#      context: ../
#      dockerfile: transaction-service/Dockerfile
#    ports:
#      - "8081:8081"
#    environment:
#      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/payment_db
#      SPRING_DATASOURCE_USERNAME: transaction_service
#      SPRING_DATASOURCE_PASSWORD: secret
#      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9093
#      SPRING_APPLICATION_NAME: transaction-service
#    depends_on:
#      - db
#      - zookeeper
#      - kafka


  db:
    image: postgres:15
    environment:
      POSTGRES_DB: payment_db
      POSTGRES_USER: transaction_service
      POSTGRES_PASSWORD: secret
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./initdb:/docker-entrypoint-initdb.d
  zookeeper:
    image: wurstmeister/zookeeper:3.4.6
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_INIT_LIMIT: 5
      ZOOKEEPER_SYNC_LIMIT: 2
      ALLOW_PLAINTEXT_LISTENER: yes

  kafka:
    image: wurstmeister/kafka:latest
    container_name: kafka
    ports:
      - "9093:9093"
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE-KAFKA:PLAINTEXT
      KAFKA_LISTENERS: INSIDE-KAFKA://0.0.0.0:9093
      KAFKA_ADVERTISED_LISTENERS: INSIDE-KAFKA://localhost:9093
      KAFKA_LISTENER_NAME_INSIDE_KAFKA: INSIDE-KAFKA
      KAFKA_LISTENER_PORT_INSIDE_KAFKA: 9093
      KAFKA_LISTENER_SECURITY_PROTOCOL: PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE-KAFKA
    depends_on:
      - zookeeper


volumes:
  postgres_data:

networks:
  kafka-net:
    driver: bridge